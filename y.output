Grammar

    0 $accept: prog_sursa $end

    1 prog_sursa: PROGRAM ID ';' bloc '.'

    2 bloc: BEGINN sect_const sect_var instr_comp GATA

    3 sect_const: /* empty */
    4           | CONST lista_const

    5 lista_const: decl_const
    6            | lista_const decl_const

    7 sect_var: /* empty */
    8         | VAR lista_var

    9 lista_var: decl_var
   10          | lista_var decl_var

   11 @1: /* empty */

   12 decl_const: ID '=' @1 expr_stat ';'

   13 decl_var: lista_id ':' tip ';'

   14 lista_id: ID
   15         | lista_id ',' ID

   16 tip: tip_simplu

   17 tip_simplu: INTEGER
   18           | SYMBOL
   19           | WORD

   20 expr_stat: factor_stat
   21          | expr_stat '+' expr_stat
   22          | expr_stat '-' expr_stat
   23          | expr_stat '*' expr_stat
   24          | expr_stat '/' expr_stat
   25          | expr_stat DIV expr_stat
   26          | expr_stat MOD expr_stat

   27 factor_stat: ID
   28            | constanta
   29            | '(' expr_stat ')'

   30 constanta: CONST_INT
   31          | CONST_REAL
   32          | CONST_CAR

   33 instr_comp: START lista_instr END

   34 lista_instr: instr
   35            | lista_instr ';' instr

   36 instr: /* empty */
   37      | instr_atrib
   38      | instr_if
   39      | instr_while
   40      | instr_comp
   41      | instr_read
   42      | instr_print

   43 instr_atrib: variabila ATRIB expresie

   44 variabila: ID
   45          | ID '[' expresie ']'
   46          | ID '.' ID

   47 expresie: factor
   48         | expresie '+' expresie
   49         | expresie '-' expresie
   50         | expresie '*' expresie
   51         | expresie '/' expresie
   52         | expresie DIV expresie
   53         | expresie MOD expresie

   54 factor: ID
   55       | constanta
   56       | ID '(' lista_expr ')'
   57       | '(' expresie ')'
   58       | ID '[' expresie ']'
   59       | ID '.' ID

   60 lista_expr: expresie
   61           | lista_expr ',' expresie

   62 instr_if: IF '(' conditie ')' '(' instr ')' ramura_else

   63 ramura_else: ELSE '(' instr ')'

   64 conditie: expr_logica
   65         | expresie op_rel expresie

   66 expr_logica: factor_logic
   67            | expr_logica AND expr_logica
   68            | expr_logica OR expr_logica

   69 factor_logic: '(' conditie ')'
   70             | NOT factor_logic

   71 op_rel: '='
   72       | '<'
   73       | '>'
   74       | NE
   75       | LE
   76       | GE
   77       | E
   78       | SL
   79       | SE

   80 instr_while: WHILE '(' conditie ')' '(' instr ')'

   81 instr_print: PRINT '(' lista_elem ')'

   82 lista_elem: element
   83           | lista_elem ',' element

   84 element: expresie
   85        | CONST_SIR

   86 instr_read: READ '(' lista_variab ')'

   87 lista_variab: variabila
   88             | lista_variab ',' variabila


Terminals, with rules where they appear

$end (0) 0
'(' (40) 29 56 57 62 63 69 80 81 86
')' (41) 29 56 57 62 63 69 80 81 86
'*' (42) 23 50
'+' (43) 21 48
',' (44) 15 61 83 88
'-' (45) 22 49
'.' (46) 1 46 59
'/' (47) 24 51
':' (58) 13
';' (59) 1 12 13 35
'<' (60) 72
'=' (61) 12 71
'>' (62) 73
'[' (91) 45 58
']' (93) 45 58
error (256)
VAR (258) 8
CONST (259) 4
BEGINN (260) 2
GATA (261) 2
START (262) 33
END (263) 33
ELSE (264) 63
IF (265) 62
WHILE (266) 80
PRINT (267) 81
READ (268) 86
PROGRAM (269) 1
ID (270) 1 12 14 15 27 44 45 46 54 56 58 59
CONST_INT (271) 30
CONST_REAL (272) 31
CONST_CAR (273) 32
CONST_SIR (274) 85
SYMBOL (275) 18
INTEGER (276) 17
WORD (277) 19
ATRIB (278) 43
NE (279) 74
LE (280) 75
GE (281) 76
E (282) 77
SL (283) 78
SE (284) 79
MOD (285) 26 53
DIV (286) 25 52
OR (287) 68
AND (288) 67
NOT (289) 70


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
prog_sursa (51)
    on left: 1, on right: 0
bloc (52)
    on left: 2, on right: 1
sect_const (53)
    on left: 3 4, on right: 2
lista_const (54)
    on left: 5 6, on right: 4 6
sect_var (55)
    on left: 7 8, on right: 2
lista_var (56)
    on left: 9 10, on right: 8 10
decl_const (57)
    on left: 12, on right: 5 6
@1 (58)
    on left: 11, on right: 12
decl_var (59)
    on left: 13, on right: 9 10
lista_id (60)
    on left: 14 15, on right: 13 15
tip (61)
    on left: 16, on right: 13
tip_simplu (62)
    on left: 17 18 19, on right: 16
expr_stat (63)
    on left: 20 21 22 23 24 25 26, on right: 12 21 22 23 24 25 26 29
factor_stat (64)
    on left: 27 28 29, on right: 20
constanta (65)
    on left: 30 31 32, on right: 28 55
instr_comp (66)
    on left: 33, on right: 2 40
lista_instr (67)
    on left: 34 35, on right: 33 35
instr (68)
    on left: 36 37 38 39 40 41 42, on right: 34 35 62 63 80
instr_atrib (69)
    on left: 43, on right: 37
variabila (70)
    on left: 44 45 46, on right: 43 87 88
expresie (71)
    on left: 47 48 49 50 51 52 53, on right: 43 45 48 49 50 51 52 53
    57 58 60 61 65 84
factor (72)
    on left: 54 55 56 57 58 59, on right: 47
lista_expr (73)
    on left: 60 61, on right: 56 61
instr_if (74)
    on left: 62, on right: 38
ramura_else (75)
    on left: 63, on right: 62
conditie (76)
    on left: 64 65, on right: 62 69 80
expr_logica (77)
    on left: 66 67 68, on right: 64 67 68
factor_logic (78)
    on left: 69 70, on right: 66 70
op_rel (79)
    on left: 71 72 73 74 75 76 77 78 79, on right: 65
instr_while (80)
    on left: 80, on right: 39
instr_print (81)
    on left: 81, on right: 42
lista_elem (82)
    on left: 82 83, on right: 81 83
element (83)
    on left: 84 85, on right: 82 83
instr_read (84)
    on left: 86, on right: 41
lista_variab (85)
    on left: 87 88, on right: 86 88


state 0

    0 $accept: . prog_sursa $end

    PROGRAM  shift, and go to state 1

    prog_sursa  go to state 2


state 1

    1 prog_sursa: PROGRAM . ID ';' bloc '.'

    ID  shift, and go to state 3


state 2

    0 $accept: prog_sursa . $end

    $end  shift, and go to state 4


state 3

    1 prog_sursa: PROGRAM ID . ';' bloc '.'

    ';'  shift, and go to state 5


state 4

    0 $accept: prog_sursa $end .

    $default  accept


state 5

    1 prog_sursa: PROGRAM ID ';' . bloc '.'

    BEGINN  shift, and go to state 6

    bloc  go to state 7


state 6

    2 bloc: BEGINN . sect_const sect_var instr_comp GATA

    CONST  shift, and go to state 8

    $default  reduce using rule 3 (sect_const)

    sect_const  go to state 9


state 7

    1 prog_sursa: PROGRAM ID ';' bloc . '.'

    '.'  shift, and go to state 10


state 8

    4 sect_const: CONST . lista_const

    ID  shift, and go to state 11

    lista_const  go to state 12
    decl_const   go to state 13


state 9

    2 bloc: BEGINN sect_const . sect_var instr_comp GATA

    VAR  shift, and go to state 14

    $default  reduce using rule 7 (sect_var)

    sect_var  go to state 15


state 10

    1 prog_sursa: PROGRAM ID ';' bloc '.' .

    $default  reduce using rule 1 (prog_sursa)


state 11

   12 decl_const: ID . '=' @1 expr_stat ';'

    '='  shift, and go to state 16


state 12

    4 sect_const: CONST lista_const .
    6 lista_const: lista_const . decl_const

    ID  shift, and go to state 11

    $default  reduce using rule 4 (sect_const)

    decl_const  go to state 17


state 13

    5 lista_const: decl_const .

    $default  reduce using rule 5 (lista_const)


state 14

    8 sect_var: VAR . lista_var

    ID  shift, and go to state 18

    lista_var  go to state 19
    decl_var   go to state 20
    lista_id   go to state 21


state 15

    2 bloc: BEGINN sect_const sect_var . instr_comp GATA

    START  shift, and go to state 22

    instr_comp  go to state 23


state 16

   12 decl_const: ID '=' . @1 expr_stat ';'

    $default  reduce using rule 11 (@1)

    @1  go to state 24


state 17

    6 lista_const: lista_const decl_const .

    $default  reduce using rule 6 (lista_const)


state 18

   14 lista_id: ID .

    $default  reduce using rule 14 (lista_id)


state 19

    8 sect_var: VAR lista_var .
   10 lista_var: lista_var . decl_var

    ID  shift, and go to state 18

    $default  reduce using rule 8 (sect_var)

    decl_var  go to state 25
    lista_id  go to state 21


state 20

    9 lista_var: decl_var .

    $default  reduce using rule 9 (lista_var)


state 21

   13 decl_var: lista_id . ':' tip ';'
   15 lista_id: lista_id . ',' ID

    ':'  shift, and go to state 26
    ','  shift, and go to state 27


state 22

   33 instr_comp: START . lista_instr END

    START  shift, and go to state 22
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    PRINT  shift, and go to state 30
    READ   shift, and go to state 31
    ID     shift, and go to state 32

    $default  reduce using rule 36 (instr)

    instr_comp   go to state 33
    lista_instr  go to state 34
    instr        go to state 35
    instr_atrib  go to state 36
    variabila    go to state 37
    instr_if     go to state 38
    instr_while  go to state 39
    instr_print  go to state 40
    instr_read   go to state 41


state 23

    2 bloc: BEGINN sect_const sect_var instr_comp . GATA

    GATA  shift, and go to state 42


state 24

   12 decl_const: ID '=' @1 . expr_stat ';'

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 48
    factor_stat  go to state 49
    constanta    go to state 50


state 25

   10 lista_var: lista_var decl_var .

    $default  reduce using rule 10 (lista_var)


state 26

   13 decl_var: lista_id ':' . tip ';'

    SYMBOL   shift, and go to state 51
    INTEGER  shift, and go to state 52
    WORD     shift, and go to state 53

    tip         go to state 54
    tip_simplu  go to state 55


state 27

   15 lista_id: lista_id ',' . ID

    ID  shift, and go to state 56


state 28

   62 instr_if: IF . '(' conditie ')' '(' instr ')' ramura_else

    '('  shift, and go to state 57


state 29

   80 instr_while: WHILE . '(' conditie ')' '(' instr ')'

    '('  shift, and go to state 58


state 30

   81 instr_print: PRINT . '(' lista_elem ')'

    '('  shift, and go to state 59


state 31

   86 instr_read: READ . '(' lista_variab ')'

    '('  shift, and go to state 60


state 32

   44 variabila: ID .
   45          | ID . '[' expresie ']'
   46          | ID . '.' ID

    '.'  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 44 (variabila)


state 33

   40 instr: instr_comp .

    $default  reduce using rule 40 (instr)


state 34

   33 instr_comp: START lista_instr . END
   35 lista_instr: lista_instr . ';' instr

    END  shift, and go to state 63
    ';'  shift, and go to state 64


state 35

   34 lista_instr: instr .

    $default  reduce using rule 34 (lista_instr)


state 36

   37 instr: instr_atrib .

    $default  reduce using rule 37 (instr)


state 37

   43 instr_atrib: variabila . ATRIB expresie

    ATRIB  shift, and go to state 65


state 38

   38 instr: instr_if .

    $default  reduce using rule 38 (instr)


state 39

   39 instr: instr_while .

    $default  reduce using rule 39 (instr)


state 40

   42 instr: instr_print .

    $default  reduce using rule 42 (instr)


state 41

   41 instr: instr_read .

    $default  reduce using rule 41 (instr)


state 42

    2 bloc: BEGINN sect_const sect_var instr_comp GATA .

    $default  reduce using rule 2 (bloc)


state 43

   27 factor_stat: ID .

    $default  reduce using rule 27 (factor_stat)


state 44

   30 constanta: CONST_INT .

    $default  reduce using rule 30 (constanta)


state 45

   31 constanta: CONST_REAL .

    $default  reduce using rule 31 (constanta)


state 46

   32 constanta: CONST_CAR .

    $default  reduce using rule 32 (constanta)


state 47

   29 factor_stat: '(' . expr_stat ')'

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 66
    factor_stat  go to state 49
    constanta    go to state 50


state 48

   12 decl_const: ID '=' @1 expr_stat . ';'
   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    MOD  shift, and go to state 71
    DIV  shift, and go to state 72
    ';'  shift, and go to state 73


state 49

   20 expr_stat: factor_stat .

    $default  reduce using rule 20 (expr_stat)


state 50

   28 factor_stat: constanta .

    $default  reduce using rule 28 (factor_stat)


state 51

   18 tip_simplu: SYMBOL .

    $default  reduce using rule 18 (tip_simplu)


state 52

   17 tip_simplu: INTEGER .

    $default  reduce using rule 17 (tip_simplu)


state 53

   19 tip_simplu: WORD .

    $default  reduce using rule 19 (tip_simplu)


state 54

   13 decl_var: lista_id ':' tip . ';'

    ';'  shift, and go to state 74


state 55

   16 tip: tip_simplu .

    $default  reduce using rule 16 (tip)


state 56

   15 lista_id: lista_id ',' ID .

    $default  reduce using rule 15 (lista_id)


state 57

   62 instr_if: IF '(' . conditie ')' '(' instr ')' ramura_else

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    NOT         shift, and go to state 76
    '('         shift, and go to state 77

    constanta     go to state 78
    expresie      go to state 79
    factor        go to state 80
    conditie      go to state 81
    expr_logica   go to state 82
    factor_logic  go to state 83


state 58

   80 instr_while: WHILE '(' . conditie ')' '(' instr ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    NOT         shift, and go to state 76
    '('         shift, and go to state 77

    constanta     go to state 78
    expresie      go to state 79
    factor        go to state 80
    conditie      go to state 84
    expr_logica   go to state 82
    factor_logic  go to state 83


state 59

   81 instr_print: PRINT '(' . lista_elem ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    CONST_SIR   shift, and go to state 85
    '('         shift, and go to state 86

    constanta   go to state 78
    expresie    go to state 87
    factor      go to state 80
    lista_elem  go to state 88
    element     go to state 89


state 60

   86 instr_read: READ '(' . lista_variab ')'

    ID  shift, and go to state 32

    variabila     go to state 90
    lista_variab  go to state 91


state 61

   46 variabila: ID '.' . ID

    ID  shift, and go to state 92


state 62

   45 variabila: ID '[' . expresie ']'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 93
    factor     go to state 80


state 63

   33 instr_comp: START lista_instr END .

    $default  reduce using rule 33 (instr_comp)


state 64

   35 lista_instr: lista_instr ';' . instr

    START  shift, and go to state 22
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    PRINT  shift, and go to state 30
    READ   shift, and go to state 31
    ID     shift, and go to state 32

    $default  reduce using rule 36 (instr)

    instr_comp   go to state 33
    instr        go to state 94
    instr_atrib  go to state 36
    variabila    go to state 37
    instr_if     go to state 38
    instr_while  go to state 39
    instr_print  go to state 40
    instr_read   go to state 41


state 65

   43 instr_atrib: variabila ATRIB . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 95
    factor     go to state 80


state 66

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat
   29 factor_stat: '(' expr_stat . ')'

    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    MOD  shift, and go to state 71
    DIV  shift, and go to state 72
    ')'  shift, and go to state 96


state 67

   21 expr_stat: expr_stat '+' . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 97
    factor_stat  go to state 49
    constanta    go to state 50


state 68

   22 expr_stat: expr_stat '-' . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 98
    factor_stat  go to state 49
    constanta    go to state 50


state 69

   23 expr_stat: expr_stat '*' . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 99
    factor_stat  go to state 49
    constanta    go to state 50


state 70

   24 expr_stat: expr_stat '/' . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 100
    factor_stat  go to state 49
    constanta    go to state 50


state 71

   26 expr_stat: expr_stat MOD . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 101
    factor_stat  go to state 49
    constanta    go to state 50


state 72

   25 expr_stat: expr_stat DIV . expr_stat

    ID          shift, and go to state 43
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 47

    expr_stat    go to state 102
    factor_stat  go to state 49
    constanta    go to state 50


state 73

   12 decl_const: ID '=' @1 expr_stat ';' .

    $default  reduce using rule 12 (decl_const)


state 74

   13 decl_var: lista_id ':' tip ';' .

    $default  reduce using rule 13 (decl_var)


state 75

   54 factor: ID .
   56       | ID . '(' lista_expr ')'
   58       | ID . '[' expresie ']'
   59       | ID . '.' ID

    '.'  shift, and go to state 103
    '('  shift, and go to state 104
    '['  shift, and go to state 105

    $default  reduce using rule 54 (factor)


state 76

   70 factor_logic: NOT . factor_logic

    NOT  shift, and go to state 76
    '('  shift, and go to state 106

    factor_logic  go to state 107


state 77

   57 factor: '(' . expresie ')'
   69 factor_logic: '(' . conditie ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    NOT         shift, and go to state 76
    '('         shift, and go to state 77

    constanta     go to state 78
    expresie      go to state 108
    factor        go to state 80
    conditie      go to state 109
    expr_logica   go to state 82
    factor_logic  go to state 83


state 78

   55 factor: constanta .

    $default  reduce using rule 55 (factor)


state 79

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   65 conditie: expresie . op_rel expresie

    NE   shift, and go to state 110
    LE   shift, and go to state 111
    GE   shift, and go to state 112
    E    shift, and go to state 113
    SL   shift, and go to state 114
    SE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121
    '='  shift, and go to state 122
    '<'  shift, and go to state 123
    '>'  shift, and go to state 124

    op_rel  go to state 125


state 80

   47 expresie: factor .

    $default  reduce using rule 47 (expresie)


state 81

   62 instr_if: IF '(' conditie . ')' '(' instr ')' ramura_else

    ')'  shift, and go to state 126


state 82

   64 conditie: expr_logica .
   67 expr_logica: expr_logica . AND expr_logica
   68            | expr_logica . OR expr_logica

    OR   shift, and go to state 127
    AND  shift, and go to state 128

    $default  reduce using rule 64 (conditie)


state 83

   66 expr_logica: factor_logic .

    $default  reduce using rule 66 (expr_logica)


state 84

   80 instr_while: WHILE '(' conditie . ')' '(' instr ')'

    ')'  shift, and go to state 129


state 85

   85 element: CONST_SIR .

    $default  reduce using rule 85 (element)


state 86

   57 factor: '(' . expresie ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 130
    factor     go to state 80


state 87

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   84 element: expresie .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 84 (element)


state 88

   81 instr_print: PRINT '(' lista_elem . ')'
   83 lista_elem: lista_elem . ',' element

    ','  shift, and go to state 131
    ')'  shift, and go to state 132


state 89

   82 lista_elem: element .

    $default  reduce using rule 82 (lista_elem)


state 90

   87 lista_variab: variabila .

    $default  reduce using rule 87 (lista_variab)


state 91

   86 instr_read: READ '(' lista_variab . ')'
   88 lista_variab: lista_variab . ',' variabila

    ','  shift, and go to state 133
    ')'  shift, and go to state 134


state 92

   46 variabila: ID '.' ID .

    $default  reduce using rule 46 (variabila)


state 93

   45 variabila: ID '[' expresie . ']'
   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121
    ']'  shift, and go to state 135


state 94

   35 lista_instr: lista_instr ';' instr .

    $default  reduce using rule 35 (lista_instr)


state 95

   43 instr_atrib: variabila ATRIB expresie .
   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 43 (instr_atrib)


state 96

   29 factor_stat: '(' expr_stat ')' .

    $default  reduce using rule 29 (factor_stat)


state 97

   21 expr_stat: expr_stat . '+' expr_stat
   21          | expr_stat '+' expr_stat .
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    MOD  shift, and go to state 71
    DIV  shift, and go to state 72

    $default  reduce using rule 21 (expr_stat)


state 98

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   22          | expr_stat '-' expr_stat .
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    MOD  shift, and go to state 71
    DIV  shift, and go to state 72

    $default  reduce using rule 22 (expr_stat)


state 99

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   23          | expr_stat '*' expr_stat .
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat

    $default  reduce using rule 23 (expr_stat)


state 100

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   24          | expr_stat '/' expr_stat .
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat

    $default  reduce using rule 24 (expr_stat)


state 101

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   26          | expr_stat . MOD expr_stat
   26          | expr_stat MOD expr_stat .

    $default  reduce using rule 26 (expr_stat)


state 102

   21 expr_stat: expr_stat . '+' expr_stat
   22          | expr_stat . '-' expr_stat
   23          | expr_stat . '*' expr_stat
   24          | expr_stat . '/' expr_stat
   25          | expr_stat . DIV expr_stat
   25          | expr_stat DIV expr_stat .
   26          | expr_stat . MOD expr_stat

    $default  reduce using rule 25 (expr_stat)


state 103

   59 factor: ID '.' . ID

    ID  shift, and go to state 136


state 104

   56 factor: ID '(' . lista_expr ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta   go to state 78
    expresie    go to state 137
    factor      go to state 80
    lista_expr  go to state 138


state 105

   58 factor: ID '[' . expresie ']'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 139
    factor     go to state 80


state 106

   69 factor_logic: '(' . conditie ')'

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    NOT         shift, and go to state 76
    '('         shift, and go to state 77

    constanta     go to state 78
    expresie      go to state 79
    factor        go to state 80
    conditie      go to state 109
    expr_logica   go to state 82
    factor_logic  go to state 83


state 107

   70 factor_logic: NOT factor_logic .

    $default  reduce using rule 70 (factor_logic)


state 108

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   57 factor: '(' expresie . ')'
   65 conditie: expresie . op_rel expresie

    NE   shift, and go to state 110
    LE   shift, and go to state 111
    GE   shift, and go to state 112
    E    shift, and go to state 113
    SL   shift, and go to state 114
    SE   shift, and go to state 115
    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121
    '='  shift, and go to state 122
    ')'  shift, and go to state 140
    '<'  shift, and go to state 123
    '>'  shift, and go to state 124

    op_rel  go to state 125


state 109

   69 factor_logic: '(' conditie . ')'

    ')'  shift, and go to state 141


state 110

   74 op_rel: NE .

    $default  reduce using rule 74 (op_rel)


state 111

   75 op_rel: LE .

    $default  reduce using rule 75 (op_rel)


state 112

   76 op_rel: GE .

    $default  reduce using rule 76 (op_rel)


state 113

   77 op_rel: E .

    $default  reduce using rule 77 (op_rel)


state 114

   78 op_rel: SL .

    $default  reduce using rule 78 (op_rel)


state 115

   79 op_rel: SE .

    $default  reduce using rule 79 (op_rel)


state 116

   48 expresie: expresie '+' . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 142
    factor     go to state 80


state 117

   49 expresie: expresie '-' . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 143
    factor     go to state 80


state 118

   50 expresie: expresie '*' . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 144
    factor     go to state 80


state 119

   51 expresie: expresie '/' . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 145
    factor     go to state 80


state 120

   53 expresie: expresie MOD . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 146
    factor     go to state 80


state 121

   52 expresie: expresie DIV . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 147
    factor     go to state 80


state 122

   71 op_rel: '=' .

    $default  reduce using rule 71 (op_rel)


state 123

   72 op_rel: '<' .

    $default  reduce using rule 72 (op_rel)


state 124

   73 op_rel: '>' .

    $default  reduce using rule 73 (op_rel)


state 125

   65 conditie: expresie op_rel . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 148
    factor     go to state 80


state 126

   62 instr_if: IF '(' conditie ')' . '(' instr ')' ramura_else

    '('  shift, and go to state 149


state 127

   68 expr_logica: expr_logica OR . expr_logica

    NOT  shift, and go to state 76
    '('  shift, and go to state 106

    expr_logica   go to state 150
    factor_logic  go to state 83


state 128

   67 expr_logica: expr_logica AND . expr_logica

    NOT  shift, and go to state 76
    '('  shift, and go to state 106

    expr_logica   go to state 151
    factor_logic  go to state 83


state 129

   80 instr_while: WHILE '(' conditie ')' . '(' instr ')'

    '('  shift, and go to state 152


state 130

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   57 factor: '(' expresie . ')'

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121
    ')'  shift, and go to state 140


state 131

   83 lista_elem: lista_elem ',' . element

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    CONST_SIR   shift, and go to state 85
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 87
    factor     go to state 80
    element    go to state 153


state 132

   81 instr_print: PRINT '(' lista_elem ')' .

    $default  reduce using rule 81 (instr_print)


state 133

   88 lista_variab: lista_variab ',' . variabila

    ID  shift, and go to state 32

    variabila  go to state 154


state 134

   86 instr_read: READ '(' lista_variab ')' .

    $default  reduce using rule 86 (instr_read)


state 135

   45 variabila: ID '[' expresie ']' .

    $default  reduce using rule 45 (variabila)


state 136

   59 factor: ID '.' ID .

    $default  reduce using rule 59 (factor)


state 137

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   60 lista_expr: expresie .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 60 (lista_expr)


state 138

   56 factor: ID '(' lista_expr . ')'
   61 lista_expr: lista_expr . ',' expresie

    ','  shift, and go to state 155
    ')'  shift, and go to state 156


state 139

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   58 factor: ID '[' expresie . ']'

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121
    ']'  shift, and go to state 157


state 140

   57 factor: '(' expresie ')' .

    $default  reduce using rule 57 (factor)


state 141

   69 factor_logic: '(' conditie ')' .

    $default  reduce using rule 69 (factor_logic)


state 142

   48 expresie: expresie . '+' expresie
   48         | expresie '+' expresie .
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 48 (expresie)


state 143

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   49         | expresie '-' expresie .
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 49 (expresie)


state 144

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   50         | expresie '*' expresie .
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    $default  reduce using rule 50 (expresie)


state 145

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   51         | expresie '/' expresie .
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie

    $default  reduce using rule 51 (expresie)


state 146

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   53         | expresie MOD expresie .

    $default  reduce using rule 53 (expresie)


state 147

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   52         | expresie DIV expresie .
   53         | expresie . MOD expresie

    $default  reduce using rule 52 (expresie)


state 148

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   65 conditie: expresie op_rel expresie .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 65 (conditie)


state 149

   62 instr_if: IF '(' conditie ')' '(' . instr ')' ramura_else

    START  shift, and go to state 22
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    PRINT  shift, and go to state 30
    READ   shift, and go to state 31
    ID     shift, and go to state 32

    $default  reduce using rule 36 (instr)

    instr_comp   go to state 33
    instr        go to state 158
    instr_atrib  go to state 36
    variabila    go to state 37
    instr_if     go to state 38
    instr_while  go to state 39
    instr_print  go to state 40
    instr_read   go to state 41


state 150

   67 expr_logica: expr_logica . AND expr_logica
   68            | expr_logica . OR expr_logica
   68            | expr_logica OR expr_logica .

    AND  shift, and go to state 128

    $default  reduce using rule 68 (expr_logica)


state 151

   67 expr_logica: expr_logica . AND expr_logica
   67            | expr_logica AND expr_logica .
   68            | expr_logica . OR expr_logica

    $default  reduce using rule 67 (expr_logica)


state 152

   80 instr_while: WHILE '(' conditie ')' '(' . instr ')'

    START  shift, and go to state 22
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    PRINT  shift, and go to state 30
    READ   shift, and go to state 31
    ID     shift, and go to state 32

    $default  reduce using rule 36 (instr)

    instr_comp   go to state 33
    instr        go to state 159
    instr_atrib  go to state 36
    variabila    go to state 37
    instr_if     go to state 38
    instr_while  go to state 39
    instr_print  go to state 40
    instr_read   go to state 41


state 153

   83 lista_elem: lista_elem ',' element .

    $default  reduce using rule 83 (lista_elem)


state 154

   88 lista_variab: lista_variab ',' variabila .

    $default  reduce using rule 88 (lista_variab)


state 155

   61 lista_expr: lista_expr ',' . expresie

    ID          shift, and go to state 75
    CONST_INT   shift, and go to state 44
    CONST_REAL  shift, and go to state 45
    CONST_CAR   shift, and go to state 46
    '('         shift, and go to state 86

    constanta  go to state 78
    expresie   go to state 160
    factor     go to state 80


state 156

   56 factor: ID '(' lista_expr ')' .

    $default  reduce using rule 56 (factor)


state 157

   58 factor: ID '[' expresie ']' .

    $default  reduce using rule 58 (factor)


state 158

   62 instr_if: IF '(' conditie ')' '(' instr . ')' ramura_else

    ')'  shift, and go to state 161


state 159

   80 instr_while: WHILE '(' conditie ')' '(' instr . ')'

    ')'  shift, and go to state 162


state 160

   48 expresie: expresie . '+' expresie
   49         | expresie . '-' expresie
   50         | expresie . '*' expresie
   51         | expresie . '/' expresie
   52         | expresie . DIV expresie
   53         | expresie . MOD expresie
   61 lista_expr: lista_expr ',' expresie .

    '+'  shift, and go to state 116
    '-'  shift, and go to state 117
    '*'  shift, and go to state 118
    '/'  shift, and go to state 119
    MOD  shift, and go to state 120
    DIV  shift, and go to state 121

    $default  reduce using rule 61 (lista_expr)


state 161

   62 instr_if: IF '(' conditie ')' '(' instr ')' . ramura_else

    ELSE  shift, and go to state 163

    ramura_else  go to state 164


state 162

   80 instr_while: WHILE '(' conditie ')' '(' instr ')' .

    $default  reduce using rule 80 (instr_while)


state 163

   63 ramura_else: ELSE . '(' instr ')'

    '('  shift, and go to state 165


state 164

   62 instr_if: IF '(' conditie ')' '(' instr ')' ramura_else .

    $default  reduce using rule 62 (instr_if)


state 165

   63 ramura_else: ELSE '(' . instr ')'

    START  shift, and go to state 22
    IF     shift, and go to state 28
    WHILE  shift, and go to state 29
    PRINT  shift, and go to state 30
    READ   shift, and go to state 31
    ID     shift, and go to state 32

    $default  reduce using rule 36 (instr)

    instr_comp   go to state 33
    instr        go to state 166
    instr_atrib  go to state 36
    variabila    go to state 37
    instr_if     go to state 38
    instr_while  go to state 39
    instr_print  go to state 40
    instr_read   go to state 41


state 166

   63 ramura_else: ELSE '(' instr . ')'

    ')'  shift, and go to state 167


state 167

   63 ramura_else: ELSE '(' instr ')' .

    $default  reduce using rule 63 (ramura_else)
